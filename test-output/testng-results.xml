<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-05T15:10:25 BST" name="Suite" finished-at="2024-09-05T15:11:09 BST" duration-ms="43866">
    <groups>
    </groups>
    <test started-at="2024-09-05T15:10:25 BST" name="Test" finished-at="2024-09-05T15:11:09 BST" duration-ms="43866">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.LoginTest@40cb698e]" started-at="2024-09-05T15:11:02 BST" name="openApplication" finished-at="2024-09-05T15:11:06 BST" duration-ms="4619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="landingTest()[pri:0, instance:tests.LoginTest@40cb698e]" started-at="2024-09-05T15:11:06 BST" name="landingTest" finished-at="2024-09-05T15:11:08 BST" duration-ms="2213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- landingTest -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.LoginTest@40cb698e]" started-at="2024-09-05T15:11:08 BST" name="closure" finished-at="2024-09-05T15:11:09 BST" duration-ms="133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.DPLoginTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.DPLoginTest@549949be]" started-at="2024-09-05T15:10:25 BST" name="openApplication" finished-at="2024-09-05T15:10:29 BST" duration-ms="3811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.DPLoginTest@549949be]" started-at="2024-09-05T15:10:29 BST" name="login" data-provider="getLoginData" finished-at="2024-09-05T15:10:34 BST" duration-ms="4967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[peterwilliams3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[peterwilliams1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Successful]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.DPLoginTest@549949be]" started-at="2024-09-05T15:10:34 BST" name="closure" finished-at="2024-09-05T15:10:34 BST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.DPLoginTest@549949be]" started-at="2024-09-05T15:10:34 BST" name="openApplication" finished-at="2024-09-05T15:10:40 BST" duration-ms="6158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.DPLoginTest@549949be]" started-at="2024-09-05T15:10:40 BST" name="login" data-provider="getLoginData" finished-at="2024-09-05T15:10:52 BST" duration-ms="11970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[peterwilliams5@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[williamspeter]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.DPLoginTest@549949be]" started-at="2024-09-05T15:10:52 BST" name="closure" finished-at="2024-09-05T15:10:52 BST" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- tests.DPLoginTest -->
      <class name="tests.RegistrationTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.RegistrationTest@5dd91bca]" started-at="2024-09-05T15:10:52 BST" name="openApplication" finished-at="2024-09-05T15:10:59 BST" duration-ms="6595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="registerTest()[pri:0, instance:tests.RegistrationTest@5dd91bca]" started-at="2024-09-05T15:10:59 BST" name="registerTest" finished-at="2024-09-05T15:11:02 BST" duration-ms="2910" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at tests.RegistrationTest.registerTest(RegistrationTest.java:55)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.RegistrationTest@5dd91bca]" started-at="2024-09-05T15:11:02 BST" name="closure" finished-at="2024-09-05T15:11:02 BST" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- tests.RegistrationTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
